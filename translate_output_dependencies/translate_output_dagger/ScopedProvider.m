//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java//dagger/internal/ScopedProvider.java
//

#include "Factory.h"
#include "J2ObjC_source.h"
#include "ScopedProvider.h"
#include "java/lang/NullPointerException.h"
#include "javax/inject/Provider.h"

@interface DaggerInternalScopedProvider () {
 @public
  id<DaggerInternalFactory> factory_;
  volatile_id instance_;
}

- (instancetype)initWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory;

@end

J2OBJC_FIELD_SETTER(DaggerInternalScopedProvider, factory_, id<DaggerInternalFactory>)
J2OBJC_VOLATILE_FIELD_SETTER(DaggerInternalScopedProvider, instance_, id)

static id DaggerInternalScopedProvider_UNINITIALIZED_;
J2OBJC_STATIC_FIELD_GETTER(DaggerInternalScopedProvider, UNINITIALIZED_, id)

__attribute__((unused)) static void DaggerInternalScopedProvider_initWithDaggerInternalFactory_(DaggerInternalScopedProvider *self, id<DaggerInternalFactory> factory);

__attribute__((unused)) static DaggerInternalScopedProvider *new_DaggerInternalScopedProvider_initWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(DaggerInternalScopedProvider)

@implementation DaggerInternalScopedProvider

- (instancetype)initWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory {
  DaggerInternalScopedProvider_initWithDaggerInternalFactory_(self, factory);
  return self;
}

- (id)get {
  id result = JreLoadVolatileId(&instance_);
  if (result == DaggerInternalScopedProvider_UNINITIALIZED_) {
    @synchronized(self) {
      result = JreLoadVolatileId(&instance_);
      if (result == DaggerInternalScopedProvider_UNINITIALIZED_) {
        JreVolatileStrongAssign(&instance_, result = [((id<DaggerInternalFactory>) nil_chk(factory_)) get]);
      }
    }
  }
  return (id) result;
}

+ (id<JavaxInjectProvider>)createWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory {
  return DaggerInternalScopedProvider_createWithDaggerInternalFactory_(factory);
}

- (void)dealloc {
  RELEASE_(factory_);
  JreReleaseVolatile(&instance_);
  [super dealloc];
}

- (void)__javaClone {
  [super __javaClone];
  JreRetainVolatile(&instance_);
}

+ (void)initialize {
  if (self == [DaggerInternalScopedProvider class]) {
    JreStrongAssignAndConsume(&DaggerInternalScopedProvider_UNINITIALIZED_, new_NSObject_init());
    J2OBJC_SET_INITIALIZED(DaggerInternalScopedProvider)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDaggerInternalFactory:", "ScopedProvider", NULL, 0x2, NULL, NULL },
    { "get", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "createWithDaggerInternalFactory:", "create", "Ljavax.inject.Provider;", 0x9, NULL, "<T:Ljava/lang/Object;>(Ldagger/internal/Factory<TT;>;)Ljavax/inject/Provider<TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "UNINITIALIZED_", NULL, 0x1a, "Ljava.lang.Object;", &DaggerInternalScopedProvider_UNINITIALIZED_, NULL, .constantValue.asLong = 0 },
    { "factory_", NULL, 0x12, "Ldagger.internal.Factory;", NULL, "Ldagger/internal/Factory<TT;>;", .constantValue.asLong = 0 },
    { "instance_", NULL, 0x42, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _DaggerInternalScopedProvider = { 2, "ScopedProvider", "dagger.internal", NULL, 0x11, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljavax/inject/Provider<TT;>;" };
  return &_DaggerInternalScopedProvider;
}

@end

void DaggerInternalScopedProvider_initWithDaggerInternalFactory_(DaggerInternalScopedProvider *self, id<DaggerInternalFactory> factory) {
  NSObject_init(self);
  JreVolatileStrongAssign(&self->instance_, DaggerInternalScopedProvider_UNINITIALIZED_);
  JreAssert((factory != nil), (@"dagger/internal/ScopedProvider.java:33 condition failed: assert factory != null;"));
  JreStrongAssign(&self->factory_, factory);
}

DaggerInternalScopedProvider *new_DaggerInternalScopedProvider_initWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) {
  DaggerInternalScopedProvider *self = [DaggerInternalScopedProvider alloc];
  DaggerInternalScopedProvider_initWithDaggerInternalFactory_(self, factory);
  return self;
}

id<JavaxInjectProvider> DaggerInternalScopedProvider_createWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) {
  DaggerInternalScopedProvider_initialize();
  if (factory == nil) {
    @throw [new_JavaLangNullPointerException_init() autorelease];
  }
  return [new_DaggerInternalScopedProvider_initWithDaggerInternalFactory_(factory) autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalScopedProvider)
