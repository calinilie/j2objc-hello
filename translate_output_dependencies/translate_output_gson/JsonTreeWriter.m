//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java//com/google/gson/internal/bind/JsonTreeWriter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JsonArray.h"
#include "JsonElement.h"
#include "JsonNull.h"
#include "JsonObject.h"
#include "JsonPrimitive.h"
#include "JsonTreeWriter.h"
#include "JsonWriter.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComGoogleGsonInternalBindJsonTreeWriter () {
 @public
  id<JavaUtilList> stack_JsonTreeWriter_;
  NSString *pendingName_;
  ComGoogleGsonJsonElement *product_;
}

- (ComGoogleGsonJsonElement *)peek;

- (void)putWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)value;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindJsonTreeWriter, stack_JsonTreeWriter_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindJsonTreeWriter, pendingName_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindJsonTreeWriter, product_, ComGoogleGsonJsonElement *)

static JavaIoWriter *ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleGsonInternalBindJsonTreeWriter, UNWRITABLE_WRITER_, JavaIoWriter *)

static ComGoogleGsonJsonPrimitive *ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleGsonInternalBindJsonTreeWriter, SENTINEL_CLOSED_, ComGoogleGsonJsonPrimitive *)

__attribute__((unused)) static ComGoogleGsonJsonElement *ComGoogleGsonInternalBindJsonTreeWriter_peek(ComGoogleGsonInternalBindJsonTreeWriter *self);

__attribute__((unused)) static void ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(ComGoogleGsonInternalBindJsonTreeWriter *self, ComGoogleGsonJsonElement *value);

@interface ComGoogleGsonInternalBindJsonTreeWriter_$1 : JavaIoWriter

- (void)writeWithCharArray:(IOSCharArray *)buffer
                   withInt:(jint)offset
                   withInt:(jint)counter;

- (void)flush;

- (void)close;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalBindJsonTreeWriter_$1)

__attribute__((unused)) static void ComGoogleGsonInternalBindJsonTreeWriter_$1_init(ComGoogleGsonInternalBindJsonTreeWriter_$1 *self);

__attribute__((unused)) static ComGoogleGsonInternalBindJsonTreeWriter_$1 *new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalBindJsonTreeWriter_$1)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonInternalBindJsonTreeWriter)

@implementation ComGoogleGsonInternalBindJsonTreeWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalBindJsonTreeWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)get {
  if (![((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty]) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected one JSON element but was ", stack_JsonTreeWriter_)) autorelease];
  }
  return product_;
}

- (ComGoogleGsonJsonElement *)peek {
  return ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
}

- (void)putWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)value {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, value);
}

- (ComGoogleGsonStreamJsonWriter *)beginArray {
  ComGoogleGsonJsonArray *array = [new_ComGoogleGsonJsonArray_init() autorelease];
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, array);
  [((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) addWithId:array];
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)endArray {
  if ([((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty] || pendingName_ != nil) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  ComGoogleGsonJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
  if ([element isKindOfClass:[ComGoogleGsonJsonArray class]]) {
    [stack_JsonTreeWriter_ removeWithInt:[stack_JsonTreeWriter_ size] - 1];
    return self;
  }
  @throw [new_JavaLangIllegalStateException_init() autorelease];
}

- (ComGoogleGsonStreamJsonWriter *)beginObject {
  ComGoogleGsonJsonObject *object = [new_ComGoogleGsonJsonObject_init() autorelease];
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, object);
  [((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) addWithId:object];
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)endObject {
  if ([((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty] || pendingName_ != nil) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  ComGoogleGsonJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
  if ([element isKindOfClass:[ComGoogleGsonJsonObject class]]) {
    [stack_JsonTreeWriter_ removeWithInt:[stack_JsonTreeWriter_ size] - 1];
    return self;
  }
  @throw [new_JavaLangIllegalStateException_init() autorelease];
}

- (ComGoogleGsonStreamJsonWriter *)nameWithNSString:(NSString *)name {
  if ([((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty] || pendingName_ != nil) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  ComGoogleGsonJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
  if ([element isKindOfClass:[ComGoogleGsonJsonObject class]]) {
    JreStrongAssign(&pendingName_, name);
    return self;
  }
  @throw [new_JavaLangIllegalStateException_init() autorelease];
}

- (ComGoogleGsonStreamJsonWriter *)valueWithNSString:(NSString *)value {
  if (value == nil) {
    return [self nullValue];
  }
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, [new_ComGoogleGsonJsonPrimitive_initWithNSString_(value) autorelease]);
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)nullValue {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, JreLoadStatic(ComGoogleGsonJsonNull, INSTANCE_));
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)valueWithBoolean:(jboolean)value {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, [new_ComGoogleGsonJsonPrimitive_initWithJavaLangBoolean_(JavaLangBoolean_valueOfWithBoolean_(value)) autorelease]);
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)valueWithDouble:(jdouble)value {
  if (![self isLenient] && (JavaLangDouble_isNaNWithDouble_(value) || JavaLangDouble_isInfiniteWithDouble_(value))) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"JSON forbids NaN and infinities: ", value)) autorelease];
  }
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, [new_ComGoogleGsonJsonPrimitive_initWithNSNumber_(JavaLangDouble_valueOfWithDouble_(value)) autorelease]);
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)valueWithLong:(jlong)value {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, [new_ComGoogleGsonJsonPrimitive_initWithNSNumber_(JavaLangLong_valueOfWithLong_(value)) autorelease]);
  return self;
}

- (ComGoogleGsonStreamJsonWriter *)valueWithNSNumber:(NSNumber *)value {
  if (value == nil) {
    return [self nullValue];
  }
  if (![self isLenient]) {
    jdouble d = [((NSNumber *) nil_chk(value)) doubleValue];
    if (JavaLangDouble_isNaNWithDouble_(d) || JavaLangDouble_isInfiniteWithDouble_(d)) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"JSON forbids NaN and infinities: ", value)) autorelease];
    }
  }
  ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(self, [new_ComGoogleGsonJsonPrimitive_initWithNSNumber_(value) autorelease]);
  return self;
}

- (void)flush {
}

- (void)close {
  if (![((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty]) {
    @throw [new_JavaIoIOException_initWithNSString_(@"Incomplete document") autorelease];
  }
  [stack_JsonTreeWriter_ addWithId:ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED_];
}

- (void)dealloc {
  RELEASE_(stack_JsonTreeWriter_);
  RELEASE_(pendingName_);
  RELEASE_(product_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [ComGoogleGsonInternalBindJsonTreeWriter class]) {
    JreStrongAssignAndConsume(&ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER_, new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init());
    JreStrongAssignAndConsume(&ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED_, new_ComGoogleGsonJsonPrimitive_initWithNSString_(@"closed"));
    J2OBJC_SET_INITIALIZED(ComGoogleGsonInternalBindJsonTreeWriter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JsonTreeWriter", NULL, 0x1, NULL, NULL },
    { "get", NULL, "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "peek", NULL, "Lcom.google.gson.JsonElement;", 0x2, NULL, NULL },
    { "putWithComGoogleGsonJsonElement:", "put", "V", 0x2, NULL, NULL },
    { "beginArray", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "endArray", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "beginObject", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "endObject", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "nameWithNSString:", "name", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithNSString:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "nullValue", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithBoolean:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithDouble:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithLong:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithNSNumber:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "UNWRITABLE_WRITER_", NULL, 0x1a, "Ljava.io.Writer;", &ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER_, NULL, .constantValue.asLong = 0 },
    { "SENTINEL_CLOSED_", NULL, 0x1a, "Lcom.google.gson.JsonPrimitive;", &ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED_, NULL, .constantValue.asLong = 0 },
    { "stack_JsonTreeWriter_", "stack", 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/google/gson/JsonElement;>;", .constantValue.asLong = 0 },
    { "pendingName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "product_", NULL, 0x2, "Lcom.google.gson.JsonElement;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComGoogleGsonInternalBindJsonTreeWriter = { 2, "JsonTreeWriter", "com.google.gson.internal.bind", NULL, 0x11, 17, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComGoogleGsonInternalBindJsonTreeWriter;
}

@end

void ComGoogleGsonInternalBindJsonTreeWriter_init(ComGoogleGsonInternalBindJsonTreeWriter *self) {
  ComGoogleGsonStreamJsonWriter_initWithJavaIoWriter_(self, ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER_);
  JreStrongAssignAndConsume(&self->stack_JsonTreeWriter_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->product_, JreLoadStatic(ComGoogleGsonJsonNull, INSTANCE_));
}

ComGoogleGsonInternalBindJsonTreeWriter *new_ComGoogleGsonInternalBindJsonTreeWriter_init() {
  ComGoogleGsonInternalBindJsonTreeWriter *self = [ComGoogleGsonInternalBindJsonTreeWriter alloc];
  ComGoogleGsonInternalBindJsonTreeWriter_init(self);
  return self;
}

ComGoogleGsonJsonElement *ComGoogleGsonInternalBindJsonTreeWriter_peek(ComGoogleGsonInternalBindJsonTreeWriter *self) {
  return [self->stack_JsonTreeWriter_ getWithInt:[((id<JavaUtilList>) nil_chk(self->stack_JsonTreeWriter_)) size] - 1];
}

void ComGoogleGsonInternalBindJsonTreeWriter_putWithComGoogleGsonJsonElement_(ComGoogleGsonInternalBindJsonTreeWriter *self, ComGoogleGsonJsonElement *value) {
  if (self->pendingName_ != nil) {
    if (![((ComGoogleGsonJsonElement *) nil_chk(value)) isJsonNull] || [self getSerializeNulls]) {
      ComGoogleGsonJsonObject *object = (ComGoogleGsonJsonObject *) check_class_cast(ComGoogleGsonInternalBindJsonTreeWriter_peek(self), [ComGoogleGsonJsonObject class]);
      [((ComGoogleGsonJsonObject *) nil_chk(object)) addWithNSString:self->pendingName_ withComGoogleGsonJsonElement:value];
    }
    JreStrongAssign(&self->pendingName_, nil);
  }
  else if ([((id<JavaUtilList>) nil_chk(self->stack_JsonTreeWriter_)) isEmpty]) {
    JreStrongAssign(&self->product_, value);
  }
  else {
    ComGoogleGsonJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
    if ([element isKindOfClass:[ComGoogleGsonJsonArray class]]) {
      [((ComGoogleGsonJsonArray *) nil_chk(((ComGoogleGsonJsonArray *) check_class_cast(element, [ComGoogleGsonJsonArray class])))) addWithComGoogleGsonJsonElement:value];
    }
    else {
      @throw [new_JavaLangIllegalStateException_init() autorelease];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalBindJsonTreeWriter)

@implementation ComGoogleGsonInternalBindJsonTreeWriter_$1

- (void)writeWithCharArray:(IOSCharArray *)buffer
                   withInt:(jint)offset
                   withInt:(jint)counter {
  @throw [new_JavaLangAssertionError_init() autorelease];
}

- (void)flush {
  @throw [new_JavaLangAssertionError_init() autorelease];
}

- (void)close {
  @throw [new_JavaLangAssertionError_init() autorelease];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalBindJsonTreeWriter_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "writeWithCharArray:withInt:withInt:", "write", "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComGoogleGsonInternalBindJsonTreeWriter_$1 = { 2, "", "com.google.gson.internal.bind", "JsonTreeWriter", 0x8008, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComGoogleGsonInternalBindJsonTreeWriter_$1;
}

@end

void ComGoogleGsonInternalBindJsonTreeWriter_$1_init(ComGoogleGsonInternalBindJsonTreeWriter_$1 *self) {
  JavaIoWriter_init(self);
}

ComGoogleGsonInternalBindJsonTreeWriter_$1 *new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init() {
  ComGoogleGsonInternalBindJsonTreeWriter_$1 *self = [ComGoogleGsonInternalBindJsonTreeWriter_$1 alloc];
  ComGoogleGsonInternalBindJsonTreeWriter_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalBindJsonTreeWriter_$1)
